<!--
	<H3>Agente Periodico</H3>
-->
<agent xmlns="http://jadex.sourceforge.net/jadex"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://jadex.sourceforge.net/jadex
	                    http://jadex.sourceforge.net/jadex-0.96.xsd"
	   name="Periodico"
	   package="Salon.Periodico">

	<imports>
		<import>jadex.runtime.*</import>
		<import>jadex.planlib.*</import>
		<import>jadex.util.*</import>
		<import>jadex.adapter.fipa.*</import>
		<import>java.util.logging.*</import>
		<import>java.util.*</import>
		<import>jadex.model.IMMessageEvent</import>
	</imports>

	<capabilities>
		<capability name="dfcap" file="jadex.planlib.DF"/>
	</capabilities>

	<beliefs>
		<!-- Si el periodico está ocupado o no -->
		<belief name="ocupado_periodico" class="Boolean">
			<fact> new Boolean(false)</fact>
		</belief>

		<!-- Tiempo transcurrido desde que se activa el agente -->
		<belief name="tiempo_actual" class="int" updaterate="100">
			<fact> (int) (System.currentTimeMillis()/1000) </fact>
		</belief>

		<!-- Tiempo en el que el agente termina de ver el periodico -->
		<belief name="tiempo_fin_periodico" class="int">
			<fact> (int) 0 </fact>
		</belief>

		<!-- Contenido del request que le llega al agente, necesario para ejecutar segundo plan  -->
		<belief name="mensaje_periodico" class="IMessageEvent"/>
	</beliefs>

	<goals>
		<!-- Objetivo para que cuando se alcance el tiempo en el que el agente ha leido el periodico se ejecute el segundo plan -->
		<maintaingoal name="leer_periodico_tiempo_superado">
			<maintaincondition>
				$beliefbase.tiempo_fin_periodico >= $beliefbase.tiempo_actual
			</maintaincondition>
		</maintaingoal>

		<!-- Objetivo para que cuando se alcance el tiempo en el que el agente ha realizado un crucigrama se ejecute el segundo plan -->
		<maintaingoal name="crucigrama_periodico_tiempo_superado">
			<maintaincondition>
				$beliefbase.tiempo_fin_periodico >= $beliefbase.tiempo_actual
			</maintaincondition>
		</maintaingoal>

		<!-- Objetivos para registrar los servicios que ofrece el agente en el DF y los correspondientes recursos y habilidades que modifica-->
		<maintaingoalref name="df_diversion_leer_periodico">
			<concrete ref="dfcap.df_keep_registered"/>
		</maintaingoalref>

		<maintaingoalref name="df_escritura_leer_periodico">
			<concrete ref="dfcap.df_keep_registered"/>
		</maintaingoalref>

		<maintaingoalref name="df_diversion_hacer_crucigrama">
			<concrete ref="dfcap.df_keep_registered"/>
		</maintaingoalref>

		<maintaingoalref name="df_logica_hacer_crucigrama">
			<concrete ref="dfcap.df_keep_registered"/>
		</maintaingoalref>
	</goals>
	<plans>
		<!-- Primer plan leer el periódico. Recibe el request del Sim y evalúa si aceptarlo o no-->
		<plan name="LeerPeriodicoPreguntaPlan">
			<body class="Salon.Periodico.LeerPeriodicoPreguntaPlan"/>
			<trigger>
				<messageevent ref="leer_periodico"/>
			</trigger>
		</plan>

		<!-- Segundo plan para leer el periodico. Se ejecuta cuando termina el tiempo de leer el periodico y modifica los recursos del Sim-->
		<plan name="LeerPeriodicoRespuestaPlan">
			<body class="Salon.Periodico.LeerPeriodicoRespuestaPlan"/>
			<trigger>
				<goal ref="leer_periodico_tiempo_superado"/>
			</trigger>
		</plan>

		<!-- Primer plan para hacer un crucigrama. Recibe el request del Sim y evalúa si aceptarlo o no-->
		<plan name="HacerCrucigramaPreguntaPlan">
			<body class="Salon.Periodico.HacerCrucigramaPreguntaPlan"/>
			<trigger>
				<messageevent ref="hacer_crucigrama"/>
			</trigger>
		</plan>

		<!-- Segundo plan para hacer un crucigrama. Se ejecuta cuando termina el tiempo de hacer un crucigrama y modifica los recursos del Sim-->
		<plan name="HacerCrucigramaRespuestaPlan">
			<body class="Salon.Periodico.HacerCrucigramaRespuestaPlan"/>
			<trigger>
				<goal ref="crucigrama_periodico_tiempo_superado"/>
			</trigger>
		</plan>

	</plans>
	<events>
		<messageevent name="leer_periodico" direction="receive" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.REQUEST</value>
			</parameter>
			<parameter name="content" class="LeerPeriodicoPreguntaPlan" direction="fixed"> </parameter>
		</messageevent>

		<messageevent name="hacer_crucigrama" direction="receive" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.REQUEST</value>
			</parameter>
			<parameter name="content" class="HacerCrucigramaPreguntaPlan" direction="fixed"> </parameter>
		</messageevent>

		<messageevent name="periodico_ocupado" direction="send" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>jadex.bridge.fipa.SFipa.REFUSE</value>
			</parameter>
			<parameter name="language" class="String" direction="fixed">
				<value>SFipa.NUGGETS_XML</value>
			</parameter>
		</messageevent>

		<messageevent name="periodico_libre" direction="send" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>jadex.bridge.fipa.SFipa.AGREE</value>
			</parameter>
			<parameter name="language" class="String" direction="fixed">
				<value>SFipa.NUGGETS_XML</value>
			</parameter>
		</messageevent>

		<messageevent name="has_leido_periodico" direction="send" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>jadex.bridge.fipa.SFipa.INFORM</value>
			</parameter>
			<parameter name="language" class="String" direction="fixed">
				<value>SFipa.NUGGETS_XML</value>
			</parameter>
		</messageevent>

		<messageevent name="has_hecho_crucigrama" direction="send" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>jadex.bridge.fipa.SFipa.INFORM</value>
			</parameter>
			<parameter name="language" class="String" direction="fixed">
				<value>SFipa.NUGGETS_XML</value>
			</parameter>
		</messageevent>

	</events>

	<configurations>
		<configuration name="default">
			<goals>
				<initialgoal ref="df_diversion_leer_periodico">
					<parameter ref="description">
						<value>
							SFipa.createAgentDescription(null,
							SFipa.createServiceDescription("Diversion", "LeerPeriodico", "Periodico"))
						</value>
					</parameter>
				</initialgoal>

				<initialgoal ref="df_escritura_leer_periodico">
					<parameter ref="description">
						<value>
							SFipa.createAgentDescription(null,
							SFipa.createServiceDescription("Escritura", "LeerPeriodico", "Periodico"))
						</value>
					</parameter>
				</initialgoal>

				<initialgoal ref="df_diversion_hacer_crucigrama">
					<parameter ref="description">
						<value>
							SFipa.createAgentDescription(null,
							SFipa.createServiceDescription("Diversion", "HacerCrucigrama", "Periodico"))
						</value>
					</parameter>
				</initialgoal>

				<initialgoal ref="df_logica_hacer_crucigrama">
					<parameter ref="description">
						<value>
							SFipa.createAgentDescription(null,
							SFipa.createServiceDescription("Logica", "HacerCrucigrama", "Periodico"))
						</value>
					</parameter>
				</initialgoal>
			</goals>
		</configuration>
	</configurations>

</agent>